---

- name: Generate a password hash with openssl
  ansible.builtin.shell: "openssl passwd -6 --stdin <<<{{ core_user_password }}"
  register: password_hash_shell_r

- name: Set fact for Password
  ansible.builtin.set_fact:
    #password_hash: "{{ core_user_password | password_hash('sha512') }}"
    password_hash: "{{ password_hash_shell_r.stdout }}"
  no_log: true

#- name: Get the current Discovery Ignition Config overrides
#  uri:
#    headers: "{{ compiled_uri_headers }}"
#    url: "{{ assisted_service_endpoint }}/infra-envs/{{ infraenv_id }}"
#    return_content: true
#    method: GET
#    status_code: 200
#    body_format: json
#  register: infraenv_query

- name: Set fact for json content
  ansible.builtin.set_fact:
    #ignition_overrides: {}
    passwd_ico_object_y:
      passwd:
        users:
          - name: core
            groups:
              - sudo
            sshAuthorizedKeys:
              - "{{ ssh_public_key }}"
            passwordHash: "{{ password_hash }}"

- name: Set the JSON formatted fact
  ansible.builtin.set_fact:
    passwd_ico_object:
      passwd: "{{ passwd_ico_object_y.passwd | to_json }}"

#- name: Set fact for json content
#  when: infraenv_query.json.ignition_config_override is defined and infraenv_query.json.ignition_config_override != ""
#  set_fact:
#    ignition_overrides: "{{ infraenv_query.json.ignition_config_override | from_json }}"

#- name: Set reformatted fact
#  set_fact:
#    ignition_overrides: "{{ ignition_overrides | combine(passwd_ico_object) }}"

#- name: Set the patch data
#  set_fact:
#    override_ic_pass_body: "{ \"ignition_config_override\": '{{ ignition_overrides | to_json }}' }"

#- name: Patch the modified Discovery Ignition Config
#  uri:
#    headers: "{{ compiled_uri_headers }}"
#    url: "{{ assisted_service_endpoint }}/infra-envs/{{ infraenv_id }}"
#    return_content: true
#    method: PATCH
#    body: '{{ override_ic_pass_body }}'
#    status_code: 201
#    body_format: json
#  register: infraenv_discovery_ign_patch
