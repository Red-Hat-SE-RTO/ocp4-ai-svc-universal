---

- name: Check for programs - govc
  ansible.builtin.shell: "which govc"
  register: program_check_govc
  ignore_errors: true

- name: Check the local bin dir for the govc file
  ansible.builtin.stat:
    path: "{{ generated_asset_directory }}/bin/govc"
  register: local_govc_check

- name: Download the govc program if is not found
  when: program_check_govc.rc != 0
  block:
    - name: Download the tar package and extract
      when: local_govc_check.stat.exists == False
      ansible.builtin.unarchive:
        src:  "https://github.com/vmware/govmomi/releases/latest/download/govc_govc_Linux_x86_64.tar.gz"
        dest: "{{ generated_asset_directory }}/bin/"
        remote_src: yes

    - name: Unarchive govc
      unarchive:
        src: "{{ generated_asset_directory }}/bin/govc.gz"
        dest: "{{ generated_asset_directory }}/bin/"
        mode: 0755
        exclude:
          - CHANGELOG.md
          - LICENSE.txt
          - README.md

- name: Query vCenter for a connectivity test
  community.vmware.vmware_datacenter_info:
    hostname: '{{ provider.credentials.vcenter_hostname }}'
    username: '{{ provider.credentials.vcenter_username }}'
    password: '{{ provider.credentials.vcenter_password }}'
    validate_certs: '{{ provider.credentials.vcenter_verify_ssl }}'
  register: vcenter_test_info

- name: Fail if the vCenter instance cannot be connected to
  when: vcenter_test_info.datacenter_info | length == 0
  fail:
    msg: "Cannot connect to vCenter at {{ provider.credentials.vcenter_hostname }}!"

- name: Reset facts
  set_fact:
    vcenter_test_info: {}